# This is a sample build configuration for PHP.
# Check our guides at https://confluence.atlassian.com/x/e8YWN for more examples.
# Only use spaces to indent your .yml configuration.
# -----
# You can specify a custom docker image from Docker Hub as your build environment.
image: php:7.4.25

definitions:
  steps:

    - step: &gitDiffAndDeploy
        name: Git Diff and Deploy
        deployment: production
        script:
          - apt-get update && apt-get install -y unzip git git-core
          - LASTCOMMITHASH=`git rev-parse @`
          - PREVIOUSCOMMITHASH=`git rev-parse @~`
          - echo "Last commit is $LASTCOMMITHASH"
          - echo "Previous commit is $PREVIOUSCOMMITHASH"
          - git archive -o output.zip $LASTCOMMITHASH $(git diff --diff-filter=ACMRTUXB --name-only $PREVIOUSCOMMITHASH $LASTCOMMITHASH)
          - find . -type f ! -iname "output.zip" -delete
          - mkdir deploy && ls
          - unzip output.zip -d deploy
          - cd deploy && ls -R
          - cd ..
          - pipe: atlassian/ftp-deploy:0.3.5
            variables:
              USER: $FTP_MONDEGC_USERNAME
              PASSWORD: $FTP_MONDEGC_PASSWORD
              SERVER: $FTP_MONDEGC_HOST
              REMOTE_PATH: '/'
              LOCAL_PATH: "deploy"
              DELETE_FLAG: 'false' # Attention, il ne faut pas supprimer les fichiers existants dans le FTP !
              DEBUG: 'true'

    - step: &buildAndTest
        name: Build and Test
        caches:
          - composer
        script:
          - apt-get update && apt-get install -y unzip
          - curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
          - composer install --ignore-platform-reqs
          - php artisan monde:init-env
        # - php artisan monde:init-db
        # - php artisan test
        artifacts:
          - vendor/**

    - step: &mirrorWithGitHub
        name: Mirror with GitHub
        clone:
          depth: full
        script:
          - apt-get update && apt-get install -y unzip git git-core
          - rm -r legacy #
          - git remote add sync git@github.com:Roxayl/mondegc.git
          - git checkout master
          - git pull
          - git push sync --mirror

    - step: &pushLaravelCodeToGitHub
        name: Push Laravel Code to GitHub
        clone:
          depth: full
        script:
          - apt-get update && apt-get install -y unzip git git-core
          - COMMIT_MESSAGE=`git log --format=%B -n 1 $BITBUCKET_COMMIT`
          - COMMITTER_NAME=`git log --format=%an -n 1 $BITBUCKET_COMMIT`
          - COMMITTER_MAIL=`git log --format=%ae -n 1 $BITBUCKET_COMMIT`
          - rm -rf .git
          - git init
          - git remote add sync git@github.com:Roxayl/mondegc-laravel.git
          - set +e
          - git fetch && git pull --rebase
          - set -e
          - ls
          - rm -f -r legacy
          - git add .
          - git config user.email "$COMMITTER_MAIL"
          - git config user.name "$COMMITTER_NAME"
          - git commit -m "$COMMIT_MESSAGE"
          - git push sync --mirror

pipelines:
  branches:

    "{master,develop}":
      - parallel:
          - step: *mirrorWithGitHub
          - step: *pushLaravelCodeToGitHub
      - step: *buildAndTest
      - step: *gitDiffAndDeploy

    '*':
      - step: *buildAndTest
